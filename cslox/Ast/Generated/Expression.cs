// Generated by cslox/Ast/generate.py at 02.08.2025 19:22 GMT+3
// This file should not be edited manually. 

using System;
namespace cslox.Ast.Generated;


public interface IExpressionVisitor<out TResult>
{
    TResult Visit<TExpression>(TExpression expression) where TExpression : Expression;
}

public abstract class Expression 
{
}

public class Grouping(Expression expression) : Expression
{
}

public class Literal(object? value) : Expression
{
}

public class Unary(Expression expression, Token @operator) : Expression
{
}

public abstract class Binary(Expression left, Expression right) : Expression
{
}

public class Addition(Expression left, Expression right) : Binary(left, right)
{
}

public class Subtraction(Expression left, Expression right) : Binary(left, right)
{
}

public class Multiplication(Expression left, Expression right) : Binary(left, right)
{
}

public class Division(Expression left, Expression right) : Binary(left, right)
{
}

